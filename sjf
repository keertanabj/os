#include <stdio.h>

int n, i, j, total = 0, temp, pos, process[20], Burst_time[20], Waiting_time[20], Turn_around_time[20];
float avg_Turn_around_time = 0, avg_Waiting_time = 0;

int SJF() {
    // Sorting the burst times in ascending order
    for(i = 0; i < n; i++) {
        pos = i;
        for(j = i + 1; j < n; j++) {
            if(Burst_time[j] < Burst_time[pos]) {
                pos = j;
            }
        }

        // Swap the burst time
        temp = Burst_time[i];
        Burst_time[i] = Burst_time[pos];
        Burst_time[pos] = temp;

        // Swap the process
        temp = process[i];
        process[i] = process[pos];
        process[pos] = temp;
    }

    Waiting_time[0] = 0;

    // Calculating waiting time for each process
    for(i = 1; i < n; i++) {
        Waiting_time[i] = 0;
        for(j = 0; j < i; j++) {
            Waiting_time[i] += Burst_time[j];
        }
        total += Waiting_time[i];
    }

    avg_Waiting_time = (float)total / n;
    total = 0;

    printf("\nProcess\t\tBurst Time\t\tWaiting Time\t\tTurnaround Time");

    // Calculating turnaround time and displaying results
    for(i = 0; i < n; i++) {
        Turn_around_time[i] = Burst_time[i] + Waiting_time[i];
        total += Turn_around_time[i];
        printf("\nP[%d]\t\t%d\t\t\t%d\t\t\t\t%d", process[i], Burst_time[i], Waiting_time[i], Turn_around_time[i]);
    }

    avg_Turn_around_time = (float)total / n;

    printf("\n\nAverage Waiting Time= %.2f", avg_Waiting_time);
    printf("\nAverage Turnaround Time= %.2f\n", avg_Turn_around_time);

    return 0;
}

int main() {
    printf("Enter the total number of processes: ");
    scanf("%d", &n);

    printf("\nEnter Burst Time:\n");
    for(i = 0; i < n; i++) {
        printf("P[%d]:", i + 1);
        scanf("%d", &Burst_time[i]);
        process[i] = i + 1;
    }

    SJF();

    return 0;
}
